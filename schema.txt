Task 提交主表 schema：

单个instance/task提交成功（有task_id返回）后，写入记录：
主键：ecs_task_id
{
'ecs_task_id': task_id,
'node_name': node_name,
'node_index_in_job': nodei,
'job_id': job_id,
'job_timestamp': job_timestamp,
'job_num_nodes': nnodes,
'task_def_arn': task_def_arn,
'task_def_name': task_def_arn.split(':')[0],
'task_def_revision': task_def_arn.split(':')[-1],
'cluster_name': cluster_name,
'container_inst_id': container_inst_id,
'retry': 0,
'task_status': IN_PROGRESS|USER_STOPPED|FAILED|PENDING_HEALTHCHECK|PENDING
'updated_at': datetime.now().isoformat(),
'created_at': datetime.now().isoformat(),
}


Job状态表

整个Job（包含N个task）提交完成后，写入Job表

{
'job_id': job_id,
'job_timestamp': job_timestamp,
'cluster_name': cluster_name,
'num_nodes': num_nodes,
'assigned_nodes': assigned_nodes,
'submittd_container_inst_ids': container_inst_ids,
'submittd_ecs_task_ids': ecs_task_ids,
'updated_at': datetime.now().isoformat(),
'created_at': datetime.now().isoformat(),
'retry': 0,
'job_status': IN_PROGRESS|USER_STOPPED|FAILED|PENDING_HEALTHCHECK|PENDING
}

Node信息表
{
'node_name': node_name,
'container_instance_id': inst_arn.split('/')[-1],
'container_instance_arn': inst_arn,
'cluster_name': cluster_name,
'node_status': AVAILABLE|UNKNOWN|ASSIGNED|IN_PROGRESS|PENDING_HEALTHCHECK|PENDING|REBOOTING|FAILED
'ip': self.nodes.get(node_name).ip,
'ibdev': self.nodes.get(node_name).ibdev,
'created_at': datetime.datetime.now().isoformat(),
'updated_at': datetime.datetime.now().isoformat()
}
